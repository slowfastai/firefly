"""Data models shared across search and caching layers."""

from datetime import datetime
from pydantic import BaseModel, Field


class PageContent(BaseModel):
    """Structured representation of a crawled web page."""

    url: str = Field(..., description="The URL")
    raw_content: str | None = Field(
        ..., description="The raw text content of the web page"
    )
    ranking_id: int = Field(..., description="The ranking ID in the search results")
    site_name: str | None = Field(
        None, description="Name of the website, e.g. www.example.com)"
    )
    title: str | None = Field(None, description="Title of the web page")
    snippet: str | None = Field(
        None, description="Summary of the web page, generated by LLM"
    )
    context: str | None = Field(None, description="Reserved field")
    page_info: str | None = Field(None, description="Reserved field")
    date: datetime | None = Field(None, description="Publication date of the web page")
    key_points: list[str] = Field(
        ...,
        min_items=1,
        max_items=5,
        description="3-5 key bullet points capturing the main ideas",
    )


class WebPageSummary(BaseModel):
    """Schema used by crawl4ai summarization."""

    title: str | None = Field(
        None, description="A short title of the page (or null if not available)"
    )
    summary: str = Field(..., description="A concise 4-6 sentence summary of the page")
    key_points: list[str] = Field(
        ...,
        min_items=1,
        max_items=5,
        description="3-5 key bullet points capturing the main ideas",
    )


# __all__ = ["PageContent", "WebPageSummary"]
